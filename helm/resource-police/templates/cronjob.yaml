apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: {{ .Values.name }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ .Values.name }}
    giantswarm.io/service-type: "managed"
spec:
  concurrencyPolicy: Allow
  failedJobsHistoryLimit: 1
  jobTemplate:
    metadata:
      labels:
        app: {{ .Values.name }}
        giantswarm.io/service-type: "managed"
    spec:
      template:
        metadata:
          labels:
            app: {{ .Values.name }}
            giantswarm.io/service-type: "managed"
        spec:
          containers:
          - args:
            - report
            env:
            - name: CORTEX_USER_NAME
              value: "{{ .Values.cortexUserName }}"
            - name: CORTEX_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: cortexPassword
                  name: {{ .Values.name }}
            - name: SLACK_WEBHOOK_ENDPOINT
              valueFrom:
                secretKeyRef:
                  key: slackWebhookEndpoint
                  name: {{ .Values.name }}
            image: "{{ .Values.image.registry }}/{{ .Values.image.name }}:{{ .Values.image.tag }}"
            imagePullPolicy: Always
            name: {{ .Values.name }}
          dnsPolicy: ClusterFirst
          restartPolicy: Never
          schedulerName: default-scheduler
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
          serviceAccountName: {{ .Values.name }} 
  schedule: "0 8,17 * * 1-5"
  successfulJobsHistoryLimit: 3
